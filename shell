#!/bin/bash
declare -a data
data=(0 0 0 0 0)
error_type=(0 0 0 0 0)
gcc main.c >&output.txt

func_handler_input()
{
input="input.txt"
while read line;
do
	error_type[0]=$(echo $1|sed 's/_/ /')
	error_type[1]=$(echo $2|sed 's/_/ /')
	error_type[2]=$(echo $3|sed 's/_/ /')
      
        data[0]=$(echo $line|grep "${error_type[0]}"|wc -l)
        data[1]=$(echo $line|grep "${error_type[1]}"|wc -l)
        data[2]=$(echo $line|grep "${error_type[2]}"|wc -l)
        sum=$(( ${data[0]} + ${data[1]} + ${data[2]} ))
		if [ $sum == "0" ]; then 
			echo "None None None None"
			return 127
		fi
        case $sum in
                ${data[0]})
                        # unknown type name error
			header=$(echo $line|awk '{print $2}'|cut -d':' -f1)
                        ps=$(echo $line|awk '{print $0}'|cut -d':' -f2)
			er=$(echo $line|awk '{for ( i = 1; i <= NF; i++ )
                        if ( $i=="name" ) print $(i+1)}')
                        er1=$(echo $line|awk '{for ( i = 1; i <= NF; i++ )
                        if ( $i=="function" ) print $(i+1)}')
			#variable detect missing pthread flags
                        er2=$(echo $line|awk '{for ( i = 1; i <= NF; i++ )
                        if ( $i=="reference" ) print $(i+2)}')
			if [ -z $er2 ]; then 
				temp=10; 
			else 
				error_type[0]="reference";
				ps="0"
			fi
			# output > 4 fields return
			out_data=$(echo "$header ${error_type[0]} $er $er1 $er2 $ps"|wc -w)
			if [ $out_data -gt 4 ]; then
				echo "None None None None"
				return 127
			else
				echo "$header ${error_type[0]} $er $er1 $er2 $ps"
			fi
                        ;;
                ${data[1]})
                        # expected character ";"
			header=$(echo $line|awk '{print $2}'|cut -d':' -f1)
                        ps=$(echo $line|awk '{print $0}'|cut -d':' -f2)
			er=$(echo $line|awk '{for ( i = 1; i <= NF; i++ )
                        if ( $i=="before" ) print $(i+1)}')
                        er1=$(echo $line|awk -v mvar=${error_type[1]} '{for ( i = 1; i <= NF; i++ )
                        if ( $i==mvar ) print $(i+1)}')
                        echo "$header ${error_type[1]} $er1 $ps"
                        ;;
                ${data[2]})
                        # undeclared MACRO or variable
			header=$(echo $line|awk '{print $2}'|cut -d':' -f1)
			ps=$(echo $line|awk '{print $0}'|cut -d':' -f2)
                        er=$(echo $line|awk -v mvar=${error_type[2]} '{for ( i = 1; i <= NF; i++ )
                        if ( $i==mvar ) print $(i-1)}')
                        echo "$header ${error_type[2]} $er $ps"
                        ;;
             esac
     done < "$input"
}

### main script start here

## check error

awk '/error:/ {print NR,$0}' output.txt>input.txt
func_handler_input unknown expected undeclared

## check warning

awk '/warning:/ {print NR,$0}' output.txt>input.txt
func_handler_input implicit anh anh

## check flags pthread

awk '/undefined reference/ {print NR,$0}' output.txt>input.txt
func_handler_input undefined_reference anh_tuan anh

